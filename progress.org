* buttcom progress
* ----------------------- Dated notes ---------------------------
* <2012-04-12 Thu> Created this project
* --------------------- Specifications --------------------------
* The user understands the limitations on remote commands and their arguments.
* The user understands how to call functions with remote commands.
* The user understands how to use a single port for debug and interface
* Code has a command called "hello" that just returns "hello yourself"
* Code has a command called "slope" that sets a slope member of a structure
* Code has a command called "slope?" that returns the slope
* Code has a command called "offset" that sets a offset member of a structure
* Code has a command called "offset?" that returns the offset value
* Commands must not be case sensitive
* ------------------------ TODO list ----------------------------
* DONE Add a hello command
  - A simple command to illustrate how the character handling works.
** Arguments: none
** Returns: "Hello yourself!"
* DONE Add a help command
  - A command to print out all the help strings.
** Arguments: none
** Returns: All the command help strings
* TODO Add a loglevel command
  - A command to set the log level.  0 -- info, 1 -- warnings, 2 -- error 
* TODO Add a logall command
  - A command to enable all systems at the info level
* TODO Work on watching the progress section
  - This section will describe how the logger functions can be used to turn off debugging output.
  - The system will boot with logging completely disabled.
  - Use the logall command to log all sytems at the info level
  - Use logreg 0 to turn logging off again
** TODO Add a citation for Dean Camera here.  Something like: These log strings can take up a lot of space in RAM, but they can be easily referenced in flash instead using the pgmspace module.  Dean Camera has written a nice explanation of how this works.

* TODO Add a note about the command array
** If you want to let the user pass arguments of other types, just change the definition of the command type to take more arguments.  For example, if you want to handle string arguments, you might add a character pointer argument to the command type definition.
* TODO Get rid of the initial "now logging system" messages.
  - The system should just start up logging only errors.  To make the magazine screenshot, just make your first command "logall"
* TODO All include files need guards
* TODO Debug messages over the usart must be tagged with their system
* TODO Identify the figures you'd like to have in the article
** Drawing of the butterfly board showing USART pins and DB9 correspondence
** Window grab of terminal showing debug output from com system
** Listing: The list of commands
** Received character flow
** Command processing flow
** Pointers used with received character buffer
* Add references
** TODO Add reference to Elicia White
** TODO Add reference to article on rs-485 router from CC magazine
* DONE Add a reference to Python's gnuplot interface
* DONE Revise the drawing showing connections to the Butterfly [4/4]
** DONE DB9 pins should come out of the page
** DONE Show the AVRISP connector and box
** DONE Add power connections
** DONE Reduce the length of the ribbon cable
* TODO Use tikz to fix up received character flow diagram
* DONE Make a script to call txt2fig.pl perl script
