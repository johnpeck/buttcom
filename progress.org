* buttcom progress
* ----------------------- Dated notes ---------------------------
* <2012-04-12 Thu> Created this project
* --------------------- Specifications --------------------------
* The user understands the limitations on remote commands and their arguments.
* The user understands how to call functions with remote commands.
* The user understands how to use a single port for debug and interface
* Code has a command called "hello" that just returns "hello yourself"
* Code has a command called "slope" that sets a slope member of a structure
* Code has a command called "slope?" that returns the slope
* Code has a command called "offset" that sets a offset member of a structure
* Code has a command called "offset?" that returns the offset value
* Commands must not be case sensitive
* ------------------------ TODO list ----------------------------
* TODO Work on watching the progress section
  - This section will describe how the logger functions can be used to turn off debugging output.
* TODO Debug messages over the usart must be tagged with their system
* TODO Identify the figures you'd like to have in the article
** Drawing of the butterfly board showing USART pins and DB9 correspondence
** Window grab of terminal showing debug output from com system
** Listing: The list of commands
** Received character flow
** Command processing flow
** Pointers used with received character buffer
* Add references
** TODO Add reference to Elicia White
** TODO Add reference to article on rs-485 router from CC magazine
* TODO All non-command returns on usart must be tagged with system
* TODO Move the code over from parkdar [3/4]
** TODO Create a new main file that will just contain a call to command processor
** DONE Copy over the usart module.  Just call it bc_usart.
** DONE Copy over the command module.  Call it bc_command.
** DONE Copy over the logger module.  Call it bc_logger.
* DONE Add a reference to Python's gnuplot interface
* DONE Revise the drawing showing connections to the Butterfly [4/4]
** DONE DB9 pins should come out of the page
** DONE Show the AVRISP connector and box
** DONE Add power connections
** DONE Reduce the length of the ribbon cable
* DONE Describe how data is loaded into the received character buffer.
* TODO Use tikz to fix up received character flow diagram
* DONE Add a USART label to connection diagram
* TODO Make a script to call txt2fig.pl perl script
