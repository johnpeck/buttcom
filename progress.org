* buttcom progress
* ----------------------- Dated notes ---------------------------
* <2012-04-12 Thu> Created this project
* --------------------- Specifications --------------------------
* The user understands the limitations on remote commands and their arguments.
* The user understands how to call functions with remote commands.
* The user understands how to add another remote command
* The user understands how to use a single port for debug and interface
* Code has a command called "hello" that just returns "hello yourself"
* Commands must not be case sensitive
* ------------------------ TODO list ----------------------------
* DONE Add a hello command
  - A simple command to illustrate how the character handling works.
** Arguments: none
** Returns: "Hello yourself!"
* DONE Add a help command
  - A command to print out all the help strings.
** Arguments: none
** Returns: All the command help strings
* DONE Work on watching the progress section
  - This section will describe how the logger functions can be used to turn off debugging output.
  - The system will boot with logging completely enabled.
  - Use the logall command to log all sytems at the info level
  - Use logreg 0 to turn logging off again
** DONE Add a citation for Dean Camera here.  Something like: These log strings can take up a lot of space in RAM, but they can be easily referenced in flash instead using the pgmspace module.  Dean Camera has written a nice explanation of how this works.

** DONE Make a putty screenshot showing processing of the hello command.  This needs to go into the watching the progress section.
* DONE Add a note about the command array
** If you want to let the user pass arguments of other types, just change the definition of the command type to take more arguments.  For example, if you want to handle string arguments, you might add a character pointer argument to the command type definition.
* DONE Modify the command array code listing to have two sections: one for the command_t definition, and the other for the command array.
  DEADLINE: <2012-06-08 Fri>
* TODO All include files need guards
* Add references
** TODO Add reference to Elicia White
* DONE Revise the drawing showing connections to the Butterfly [4/4]
** DONE DB9 pins should come out of the page
** DONE Show the AVRISP connector and box
** DONE Add power connections
** DONE Reduce the length of the ribbon cable
* DONE Use tikz to fix up received character flow diagram
* TODO Create the parse buffer figure
** This will show where the string terminators are inserted.  Need to get the pointer names correct.
** TODO Check the parse buffer figure against the xfig flow diagram.
* TODO Add a section describing the toolchain
** The section should say that the code was built with avr-gcc, and it should list the RAM and flash sizes as percentages and absolute values.
* DONE Add a set of instructions for adding remote commands
* TODO Work on the command processing flow diagram [1/1]
** DONE Add a step showing conversion of the command to lower case
** TODO Make the diagram more compact
   - Suggestion: Move the execute command box to be above is the command within limits
* TODO Make a submit target to create the text file and copy figures for submission
* TODO Add a reference to winavr for their makefile
* TODO Create second submission to CC following the recommended guidelines from CJ email
* TODO Go through the article submission checklist to add requirements for each stipulation
* TODO Meet Circuit Cellar requirements [/]
** TODO Expand figure captions to be 2-3 sentences
** TODO Figures with a lot of text must be in TIF format (no compression) (300dpi) (4x4 inches)
** TODO Add a biography
** TODO Add a phone number and mailing address
** TODO Article should be 2000 to 4000 words long
** TODO No more than 10 figures or listings
** TODO Get rid of the numbered list.  Text must be in paragraph format.
